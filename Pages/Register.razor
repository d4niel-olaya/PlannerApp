@page "/register"
@inject IUserQM _userService
@inject NavigationManager _navigator
@inject ISnackbar _alert
@layout LoginLayout

<MudCard Outlined="false" Elevation="0">
    <MudCardContent>
            <MudText Typo="Typo.h3" Align="Align.Center" >Registrate</MudText>
            <div class="space-top">
                <MudTextField T="string" Label="Email" Variant="Variant.Outlined" Adornment="Adornment.End"  InputType="InputType.Email" AdornmentIcon="@Icons.Material.Filled.Mail" @bind-Value="_model.UserEmail" Required RequiredError="Campo requerido"/>
            </div>
            <div class="space-top">
                <MudTextField T="string"  Label="Contrase침a" Variant="Variant.Outlined" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ButtonTestclick" AdornmentAriaLabel="Show Password"  @bind-Value="_model.UserPassword"  Required RequiredError="Campo requerido"/>
            </div>
            <div class="space-top">
                <MudTextField T="string"  Label="Confirma la contrase침a" Variant="Variant.Outlined" InputType="@PasswordInputConfirm" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIconConfirm" OnAdornmentClick="ButtonTestclickConfirm" AdornmentAriaLabel="Show Password"  @bind-Value="PasswordConfirm"  Required RequiredError="Campo requerido"/>
            </div>
            <MudButton Variant="Variant.Filled" FullWidth="true"  Style="@($"background:#3AB394;margin-top:1rem;color:white;")" OnClick="UserRegister">Crea tu cuenta</MudButton>
            
    </MudCardContent>
</MudCard>


@code{
    
    
    private User _model = new User();

    string ColorInput = Colors.LightBlue.Accent1;
    bool isShow;

    bool isShowConfirm; 
    InputType PasswordInput = InputType.Password;

    InputType PasswordInputConfirm = InputType.Password;
    string PasswordConfirm = String.Empty;

   
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    string PasswordInputIconConfirm = Icons.Material.Filled.VisibilityOff;

    void ButtonTestclick() // Show password - Input password
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    void ButtonTestclickConfirm() // Show password ( Input confirm password )
    {
        @if (isShowConfirm)
        {
            isShowConfirm = false;
            PasswordInputIconConfirm = Icons.Material.Filled.VisibilityOff;
            PasswordInputConfirm = InputType.Password;
        }
        else {
            isShowConfirm = true;
            PasswordInputIconConfirm = Icons.Material.Filled.Visibility;
            PasswordInputConfirm = InputType.Text;
        }
    }


    
    private async Task UserRegister()
    {
        _model.UserRole = "admin";
        _model.UserNickname= "USERTEST";
        _alert.Configuration.RequireInteraction = true;
        if(!string.IsNullOrEmpty(_model.UserEmail.Trim()) && !string.IsNullOrEmpty(_model.UserPassword.Trim()))
        {

            if(_model.UserPassword != PasswordConfirm)
            {
                _alert.Add("Las contrase침as no coinciden", Severity.Error);

            }
            else{
                var result = await _userService.Register(_model);
                if((int)result.code == 201)
                {

                    _model = new User();
                    
                    _alert.Add("Te has registrado con exito", Severity.Success);
                    await Task.Delay(3000);
                    _navigator.NavigateTo("/login");
                }
                else if((int)result.code == 400)
                {
                    _alert.Add("El email ya existe", Severity.Warning);
                }
                else{
                      _alert.Add("Algo ha salido mal, Recarga la p치gina", Severity.Error);
                }   
            

            }
        }
        else{
             _alert.Add("Debes llenar los campos requeridos", Severity.Error);
        }
        
    }


}