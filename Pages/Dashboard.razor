@page "/dashboard"
@attribute [Authorize]
@inject IProjectService _projectService
@inject IDialogService DialogService
@inject UserTemp _userTemp

   

<MudContainer>
    <MudContainer MaxWidth="MaxWidth.Large" Class="d-flex justify-space-around mt-2">
        <MudText Typo="Typo.h3"> Proyectos</MudText>
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="OpenDialog"/>
    </MudContainer>
     <MudPaper>
            @if(ListProjects.Count > 0)
            {
                @foreach(var prj in ListProjects)
                {
                    <ProjectComponent project="prj"/>
                }
            }
        </MudPaper>
</MudContainer>
@code{
    [CascadingParameter]
    public Task<AuthenticationState> authenticationState {get;set;}

    
    public int UserId {get;set;}
    public List<PlannerApp.Database.Models.Project> ListProjects = new List<PlannerApp.Database.Models.Project>();

    protected override async Task OnInitializedAsync() 
    {
        ListProjects = await _projectService.GetProjects();
        UserId = _userTemp.GetCurrentUserId();
    }

    
    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<ProjectCreate>("Crea tu proyecto", options);
        
    }

    public async Task CreateProject(Project model)
    {
        await _projectService.CreateProject(model);
    }
}